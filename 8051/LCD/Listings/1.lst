C51 COMPILER V9.60.0.0   1                                                                 03/09/2020 12:46:44 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE 1
OBJECT MODULE PLACED IN .\Objects\1.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE 1.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\1.lst) 
                    -TABS(2) OBJECT(.\Objects\1.obj)

line level    source

   1          #include <REGX52.H>
   2          
   3          enum 
   4          {
   5            row1=0,
   6            row2=64,
   7            row3=20,
   8            row4=84,
   9          }LCD_row;
  10          
  11          int i,j;
  12          
  13          void LCD_CMND(char);
  14          void LCD_DATA(char);
  15          void wait_for_BusySequence();
  16          void CustomCharLCD();
  17          void DispCursorAtPosition(int ,int);
  18          void LCD_Init();
  19          
  20          sbit Enable=P2^7;
  21          sbit RW=P2^6;
  22          sbit RS=P2^5;
  23          
  24          //unsigned int date[10]= {0,8,0,3,2,0,2,0};
  25          
  26          void main()
  27          {
  28   1        Enable=0;
  29   1        
  30   1        CustomCharLCD();
  31   1        LCD_Init();
  32   1        
  33   1        LCD_DATA('A');  
  34   1        wait_for_BusySequence();
  35   1        LCD_DATA('B');
  36   1        wait_for_BusySequence();  
  37   1        LCD_DATA('C');  
  38   1        wait_for_BusySequence();
  39   1        LCD_DATA('0');
  40   1        wait_for_BusySequence();
  41   1        
  42   1      //  for(j=0;j<8;j++)
  43   1      //  {
  44   1      //    LCD_DATA(date[j]+0x30); 
  45   1      //    wait_for_BusySequence();
  46   1      //  }
  47   1      
  48   1        LCD_DATA(0);
  49   1        wait_for_BusySequence();
  50   1        LCD_DATA(1);
  51   1        wait_for_BusySequence();
  52   1        DispCursorAtPosition(row1,4);  //column no 0 to 19  
  53   1        
  54   1        while(1)
C51 COMPILER V9.60.0.0   1                                                                 03/09/2020 12:46:44 PAGE 2   

  55   1        {}
  56   1      }
  57          
  58          void LCD_CMND(char command)
  59          {
  60   1        RS=0;
  61   1        RW=0;
  62   1        P3= command;
  63   1        Enable=1;
  64   1        for(i=0;i<100;i++){}
  65   1        Enable=0;
  66   1      }
  67          
  68          void LCD_DATA(char Data)
  69          {
  70   1        RS=1;
  71   1        RW=0;
  72   1        P3=Data;
  73   1        Enable=1;
  74   1        for(i=0;i<100;i++){}
  75   1        Enable=0;
  76   1      }
  77          
  78          void LCD_Init()
  79          {
  80   1        LCD_CMND(0x01);             //clear display
  81   1        wait_for_BusySequence();
  82   1        LCD_CMND(0x02);             //cursor at home
  83   1        wait_for_BusySequence();
  84   1        LCD_CMND(0x38);             //Function Set
  85   1        wait_for_BusySequence();
  86   1        LCD_CMND(0x0E);             //Display ON-OFF control
  87   1        wait_for_BusySequence();
  88   1      }
  89          
  90          void wait_for_BusySequence()
  91          {
  92   1        char buf;
  93   1        RS=0;
  94   1        RW=1;
  95   1        Enable=1;
  96   1        for(i=0;i<100;i++){}
  97   1        Enable=0;
  98   1        buf=P3>>7;
  99   1        while(buf)
 100   1        {
 101   2          Enable=1;
 102   2          for(i=0;i<100;i++){}
 103   2          Enable=0;
 104   2          buf=P3>>7;
 105   2        }
 106   1      }
 107          
 108          void CustomCharLCD()
 109          {
 110   1        //custom character at CGRAM location 0
 111   1        LCD_CMND(0x40);
 112   1        wait_for_BusySequence();
 113   1        LCD_DATA(0x00);
 114   1        wait_for_BusySequence();
 115   1        LCD_DATA(0x00);
 116   1        wait_for_BusySequence();
C51 COMPILER V9.60.0.0   1                                                                 03/09/2020 12:46:44 PAGE 3   

 117   1        LCD_DATA(0x00);
 118   1        wait_for_BusySequence();
 119   1        LCD_DATA(0x00);
 120   1        wait_for_BusySequence();
 121   1        LCD_DATA(0x04);
 122   1        wait_for_BusySequence();
 123   1        LCD_DATA(0x0E);
 124   1        wait_for_BusySequence();
 125   1        LCD_DATA(0x1F);
 126   1        wait_for_BusySequence();
 127   1        
 128   1          //custom character at CGRAM location 1
 129   1        LCD_CMND(0x48);
 130   1        wait_for_BusySequence();
 131   1        LCD_DATA(0x00);
 132   1        wait_for_BusySequence();
 133   1        LCD_DATA(0x02);
 134   1        wait_for_BusySequence();
 135   1        LCD_DATA(0x02);
 136   1        wait_for_BusySequence();
 137   1        LCD_DATA(0x02);
 138   1        wait_for_BusySequence();
 139   1        LCD_DATA(0x0A);
 140   1        wait_for_BusySequence();
 141   1        LCD_DATA(0x1E);
 142   1        wait_for_BusySequence();
 143   1        LCD_DATA(0x08);
 144   1        wait_for_BusySequence();
 145   1      }
 146          
 147          void DispCursorAtPosition(int RowNo, int ColNo)
 148          {
 149   1        char position;
 150   1        position= (char)RowNo + (char)ColNo;
 151   1        LCD_CMND(0x80 | position);
 152   1        wait_for_BusySequence();
 153   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    335    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      5    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
